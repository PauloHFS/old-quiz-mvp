// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
  Quiz      Quiz[]
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Quiz {
  id               Int                @id @default(autoincrement())
  userId           Int
  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  name             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Question         Question[]
  ResponseUserInfo ResponseUserInfo[]
}

model Question {
  id           Int        @id @default(autoincrement())
  quizId       Int
  quiz         Quiz       @relation(fields: [quizId], references: [id], onDelete: Cascade)
  title        String
  alternatives String[]   @default([])
  correctIndex Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Response     Response[]
}

model Response {
  id                 Int              @id @default(autoincrement())
  questionId         Int
  question           Question         @relation(fields: [questionId], references: [id], onDelete: Cascade)
  responseUserInfoId Int
  responseUserInfo   ResponseUserInfo @relation(fields: [responseUserInfoId], references: [id], onDelete: Cascade)
  alternative        String
  createdAt          DateTime         @default(now())
}

model ResponseUserInfo {
  id          Int        @id @default(autoincrement())
  quizId      Int
  quiz        Quiz       @relation(fields: [quizId], references: [id], onDelete: Cascade)
  gender      String
  age         Int
  geolocation String // cidade-estado
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Response    Response[]
}
